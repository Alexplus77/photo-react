{"version":3,"sources":["components/SelectBlock.js","components/ImageItem.js","components/ImageBlock.js","pages/SelectPhotoPage.jsx","App.js","index.js"],"names":["SelectBlock","handleSelect","className","type","onChange","ImageItem","url","handleClose","src","onClick","ImageBlock","form","map","nanoid","SelectPhotoPage","App","useState","setForms","evt","a","files","target","Promise","all","o","file","resolve","reject","fileReader","FileReader","addEventListener","currentTarget","result","Error","error","readAsDataURL","urls","updateForm","filter","urlImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAWeA,EATK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACrB,OACE,sBAAKC,UAAU,mBAAf,UACE,uBAAOC,KAAK,OAAOC,SAAUH,IAC7B,qBAAKC,UAAU,cAAf,iC,gBCQSG,EAZG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,YACxB,OACE,sBAAKL,UAAU,cAAf,UACE,qBAAKM,IAAKF,IACV,oBAAGJ,UAAU,WAAWO,QAAS,kBAAMF,EAAYD,IAAnD,UACG,IACD,cAAC,IAAD,WCKOI,EATI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMJ,EAAkB,EAAlBA,YAC1B,OACE,qBAAKL,UAAU,wBAAf,SACGS,EAAKC,KAAI,SAACN,GAAD,OACR,cAAC,EAAD,CAA0BA,IAAKA,EAAKC,YAAaA,GAAjCM,qBCITC,EATS,SAAC,GAAyC,IAAvCH,EAAsC,EAAtCA,KAAMV,EAAgC,EAAhCA,aAAcM,EAAkB,EAAlBA,YAC7C,OACE,sBAAKL,UAAU,YAAf,UACE,cAAC,EAAD,CAAaD,aAAcA,IAC3B,cAAC,EAAD,CAAYU,KAAMA,EAAMJ,YAAaA,QCgC5BQ,MAnCf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOL,EAAP,KAAaM,EAAb,KAcMhB,EAAY,uCAAG,WAAOiB,GAAP,iBAAAC,EAAA,6DACbC,EADa,YACDF,EAAIG,OAAOD,OADV,SAEAE,QAAQC,IAAIH,EAAMR,KAAI,SAACY,GAAD,OAdpBC,EAcyCD,EAbvD,IAAIF,SAAQ,SAACI,EAASC,GAC3B,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,QAAQ,SAACZ,GACnCQ,EAAQR,EAAIa,cAAcC,WAE5BJ,EAAWE,iBAAiB,SAAS,SAACZ,GACpCS,EAAO,IAAIM,MAAMf,EAAIa,cAAcG,WAErCN,EAAWO,cAAcV,MATP,IAACA,MAYF,OAEbW,EAFa,OAGnBnB,EAAS,GAAD,mBAAKN,GAAL,CAAWyB,KAHA,2CAAH,sDAWlB,OACE,cAAC,EAAD,CACEzB,KAAMA,EACNV,aAAcA,EACdM,YATgB,SAACD,GACnB,IAAM+B,EAAa1B,EAAK2B,QAAO,SAACC,GAAD,OAAcA,IAAajC,KAC1DW,EAASoB,OCrBbG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.22478688.chunk.js","sourcesContent":["import \"App.css\";\n\nconst SelectBlock = ({ handleSelect }) => {\n  return (\n    <div className=\"container-select\">\n      <input type=\"file\" onChange={handleSelect} />\n      <div className=\"blockSelect\">Click to select</div>\n    </div>\n  );\n};\n\nexport default SelectBlock;\n","import \"App.css\";\nimport { FaTimes } from \"react-icons/fa\";\nconst ImageItem = ({ url, handleClose }) => {\n  return (\n    <div className=\"image-block\">\n      <img src={url} />\n      <i className=\"fa-times\" onClick={() => handleClose(url)}>\n        {\" \"}\n        <FaTimes />\n      </i>\n    </div>\n  );\n};\n\nexport default ImageItem;\n","import \"App.css\";\nimport { nanoid } from \"nanoid\";\nimport ImageItem from \"./ImageItem\";\n\nconst ImageBlock = ({ form, handleClose }) => {\n  return (\n    <div className=\"container-image-block\">\n      {form.map((url) => (\n        <ImageItem key={nanoid()} url={url} handleClose={handleClose} />\n      ))}\n    </div>\n  );\n};\nexport default ImageBlock;\n","import SelectBlock from \"components/SelectBlock\";\nimport ImageBlock from \"components/ImageBlock\";\n\nconst SelectPhotoPage = ({ form, handleSelect, handleClose }) => {\n  return (\n    <div className=\"container\">\n      <SelectBlock handleSelect={handleSelect} />\n      <ImageBlock form={form} handleClose={handleClose} />\n    </div>\n  );\n};\n\nexport default SelectPhotoPage;\n","import \"App.css\";\nimport { useState } from \"react\";\nimport SelectPhotoPage from \"pages/SelectPhotoPage\";\n\nfunction App() {\n  const [form, setForms] = useState([]);\n\n  const fileToDataUrl = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.addEventListener(\"load\", (evt) => {\n        resolve(evt.currentTarget.result);\n      });\n      fileReader.addEventListener(\"error\", (evt) => {\n        reject(new Error(evt.currentTarget.error));\n      });\n      fileReader.readAsDataURL(file);\n    });\n  };\n  const handleSelect = async (evt) => {\n    const files = [...evt.target.files];\n    const urls = await Promise.all(files.map((o) => fileToDataUrl(o)));\n    setForms([...form, urls]);\n    // У вас в массиве - dataUrl, можете использовать в качестве значения атрибута src тега img\n  };\n  const handleClose = (url) => {\n    const updateForm = form.filter((urlImage) => urlImage !== url);\n    setForms(updateForm);\n  };\n\n  return (\n    <SelectPhotoPage\n      form={form}\n      handleSelect={handleSelect}\n      handleClose={handleClose}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}